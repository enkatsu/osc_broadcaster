name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Install musl tools
        if : matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt install -qq -y musl-tools --no-install-recommends

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Package for linux-musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          zip --junk-paths osc_broadcaster-${{ matrix.target }} target/${{ matrix.target }}/release/osc_broadcaster

      - name: Package for windows
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          powershell Compress-Archive -Path target/${{ matrix.target }}/release/osc_broadcaster.exe -DestinationPath osc_broadcaster-${{ matrix.target }}.zip

      - name: Package for macOS
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          zip --junk-paths osc_broadcaster-${{ matrix.target }} target/${{ matrix.target }}/release/osc_broadcaster

      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.target }}
          path: osc_broadcaster-${{ matrix.target }}.zip

#jobs:
#  build:
#    name: Release binary
#    strategy:
#      matrix:
#        include:
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-gnu
#            artifact_name: osc_broadcaster
#            asset_name: osc_broadcaster-x86_64-unknown-linux-gnu
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-musl
#            artifact_name: osc_broadcaster
#            asset_name: osc_broadcaster-x86_64-unknown-linux-musl
#          - os: ubuntu-latest
#            target: x86_64-pc-windows-gnu
#            artifact_name: osc_broadcaster.exe
#            asset_name: osc_broadcaster-x86_64-pc-windows-gnu.exe
#          - os: macos-latest
#            target: x86_64-apple-darwin
#            artifact_name: osc_broadcaster
#            asset_name: osc_broadcaster-x86_64-apple-darwin
#
#
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Install stable toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#
#      - name: Cross build with all features
#        uses: actions-rs/cargo@v1
#        with:
#          use-cross: true
#          command: build
#          args: --release --target ${{ matrix.target }} --all-features --verbose
#
#      - name: Upload binaries to release
#        uses: svenstaro/upload-release-action@2.1.1
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
#          asset_name: ${{ matrix.asset_name }}
#          tag: ${{ github.ref }}
#          overwrite: true
